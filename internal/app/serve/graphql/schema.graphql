scalar Time

enum UserStatus {
	NEW
	ACTIVE
	LEFT
}

enum MembershipType {
	BASIC
	GOLD
}

enum ActionType {
	GIVE
	REVOKE
}

type User {
	id: ID!
	username: String!
	displayName: String!
	membershipType: MembershipType!
	status: UserStatus!
	createdAt: Time!
	updatedAt: Time!
	races: Int!
	points: Int!
	raffleTickets(id: ID!): [RaffleTicketLog!]!
}

type RaffleTicketLog {
	id: ID!
	raffleID: String!
	userID: String!
	username: String!
	displayName: String!
	code: String!
	actionType: ActionType!
	content: String!
	createdAt: Time!
}

type RaffleTicketStat {
	available: Int!
	sold: Int!
}

type Competition {
	id: ID!
	name: String!
	startAt: Time!
	finishAt: Time!
	users: [User!]!
}

type Query {
	competition(id: ID!): Competition!
	raffleTicketStats(id: ID!): RaffleTicketStat!
	raffleLogs(id: ID!, includeRevoke: Boolean): [RaffleTicketLog!]!
}
